(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[639],{3159:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-293b0bbf",path:"/01-installing.html",title:"Install",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Stable",slug:"stable",children:[]},{level:2,title:"Rolling",slug:"rolling",children:[]},{level:2,title:"I already have a Neovim config",slug:"i-already-have-a-neovim-config",children:[]},{level:2,title:"Compiling Neovim from source",slug:"compiling-neovim-from-source",children:[]},{level:2,title:"Manual install",slug:"manual-install",children:[]},{level:2,title:"Troubleshooting installation problems",slug:"troubleshooting-installation-problems",children:[]},{level:2,title:"Uninstall",slug:"uninstall",children:[]}],filePathRelative:"01-installing.md",git:{updatedTime:1628105216e3,contributors:[]}}},7084:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>b});var e=a(6252);const l=(0,e.uE)('<h1 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h1><p>There are a few ways to install LunarVim</p><h2 id="stable" tabindex="-1"><a class="header-anchor" href="#stable" aria-hidden="true">#</a> Stable</h2><p>No alarms and no surprises:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/master/utils/installer/install.sh<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="rolling" tabindex="-1"><a class="header-anchor" href="#rolling" aria-hidden="true">#</a> Rolling</h2><p>All the new features with all the new bugs:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">LVBRANCH</span><span class="token operator">=</span>rolling <span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -s https://raw.githubusercontent.com/ChristianChiarulli/lunarvim/rolling/utils/installer/install.sh<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Make sure you have the newest version of Neovim (0.5).</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -s https://raw.githubusercontent.com/ChristianChiarulli/LunarVim/rolling/utils/bin/install-latest-neovim<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>After installation run <code>lvim</code> and then <code>:PackerInstall</code></p><h2 id="i-already-have-a-neovim-config" tabindex="-1"><a class="header-anchor" href="#i-already-have-a-neovim-config" aria-hidden="true">#</a> I already have a Neovim config</h2><p>If you already have a <code>nvim</code> directory under <code>~/.config</code> don&#39;t worry LunarVim will not overwrite it. Your LunarVim config will be located in <code>~/.config/lvim</code></p><h2 id="compiling-neovim-from-source" tabindex="-1"><a class="header-anchor" href="#compiling-neovim-from-source" aria-hidden="true">#</a> Compiling Neovim from source</h2><p>Some operating systems package versions of Neovim 0.5. You can install those or you can follow the steps below to compile the latest version from source. Compiling from source is the recommended method. Sometimes features are added to neovim that plugin authors take advantage of. Older versions of neovim won&#39;t have those features and some plugins won&#39;t run correctly.</p>',15),i=(0,e.Uk)("First, get the dependencies. For distributions other than Ubuntu or Arch go "),o={href:"https://github.com/neovim/neovim/wiki/Building-Neovim#build-prerequisites",target:"_blank",rel:"noopener noreferrer"},t=(0,e.Uk)("here"),p=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#Ubuntu</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gettext libtool libtool-bin autoconf automake cmake g++ pkg-config <span class="token function">unzip</span> build-essential\n<span class="token comment">#Arch</span>\n<span class="token function">sudo</span> pacman -S base-devel cmake <span class="token function">unzip</span> ninja tree-sitter\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Download and compile Neovim</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token variable"><span class="token variable">$(</span>mktemp -d<span class="token variable">)</span></span>\n<span class="token function">git</span> clone https://github.com/neovim/neovim\n<span class="token builtin class-name">cd</span> neovim\n<span class="token function">sudo</span> <span class="token function">make</span> <span class="token assign-left variable">CMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release <span class="token function">install</span>\n<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>\n<span class="token function">sudo</span> <span class="token function">rm</span> -r neovim\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>or if you are on Arch you can get it from the AUR</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>yay -S neovim-git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>If you are on Gentoo you have to emerge the 9999 neovim version with luajit as the lua single target</p><h2 id="manual-install" tabindex="-1"><a class="header-anchor" href="#manual-install" aria-hidden="true">#</a> Manual install</h2><p>First make sure you have version <a href="#compiling-neovim-from-source">0.5 of neovim</a>.</p><p>Install xclip, python3, ripgrep, fzf, npm, nodejs, pip, and with the package manager for your distribution.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Ubuntu</span>\n<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> xclip python3-pip nodejs <span class="token function">npm</span> ripgrep fzf libjpeg8-dev zlib1g-dev python-dev python3-dev libxtst-dev python3-pip\n\n<span class="token comment"># Arch</span>\n<span class="token function">sudo</span> pacman -S xclip python python-pip nodejs <span class="token function">npm</span> ripgrep fzf \n\n<span class="token comment"># Fedora</span>\n<span class="token function">sudo</span> dnf groupinstall <span class="token string">&quot;X Software Development&quot;</span>\n<span class="token function">sudo</span> dnf <span class="token function">install</span> -y xclip python3-devel pip nodejs <span class="token function">npm</span> ripgrep fzf \npip3 <span class="token function">install</span> wheel ueberzug\n\n<span class="token comment"># Gentoo</span>\n<span class="token function">sudo</span> emerge -avn sys-apps/ripgrep app-shells/fzf app-misc/dev-python/neovim-remote virtual/jpeg sys-libs/zlib\n<span class="token function">sudo</span> emerge -avn dev-python/pip\n<span class="token comment"># Optional.   Enable npm USE flag with flaggie</span>\n<span class="token function">sudo</span> flaggie net-libs/nodejs +npm\n<span class="token function">sudo</span> emerge -avnN net-libs/nodejs\n\n<span class="token comment"># Mac</span>\nbrew <span class="token function">install</span> lua node <span class="token function">yarn</span> ripgrep fzf \n<span class="token function">sudo</span> <span class="token function">curl</span> https://bootstrap.pypa.io/get-pip.py -o get-pip.py\npython3 get-pip.py\n<span class="token function">rm</span> get-pip.py\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',10),r=(0,e.Uk)("Install tree-sitter. To globally install packages without the need for sudo follow "),c={href:"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("this guide"),m=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g tree-sitter-cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Install ueberzug, neovim-remote, and pynvim with pip3</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pip3 <span class="token function">install</span> ueberzug neovim neovim-remote pynvim --user\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Clone plugins</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/.local/share/lunarvim/site/pack/packer/start/\n<span class="token builtin class-name">cd</span> ~/.local/share/lunarvim/site/pack/packer/start/\n<span class="token function">git</span> clone https://github.com/wbthomason/packer.nvim.git\n<span class="token function">git</span> clone https://github.com/tamago324/nlsp-settings.nvim.git\n<span class="token function">git</span> clone https://github.com/jose-elias-alvarez/null-ls.nvim.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Clone LunarVim</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#Rolling Branch</span>\n<span class="token function">git</span> clone --branch rolling https://github.com/ChristianChiarulli/lunarvim.git \n\n<span class="token comment">#Stable Branch</span>\n<span class="token function">git</span> clone --branch master https://github.com/ChristianChiarulli/lunarvim.git \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Create your configuration file</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/.config/lvim\n<span class="token function">cp</span> ~/.local/share/lunarvim/lvim/utils/installer/config.example.lua ~/.config/lvim/config.lua\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Install plugins</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#launch LunarVim</span>\nlvim\n\n<span class="token comment"># Type this command</span>\n:PackerSync\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="troubleshooting-installation-problems" tabindex="-1"><a class="header-anchor" href="#troubleshooting-installation-problems" aria-hidden="true">#</a> Troubleshooting installation problems</h2><p>If you encounter problems with the installation check the following:</p><ol><li>Make sure you have at least version 0.5 of neovim. There were some breaking changes in the development of 0.5 so upgrade to the newest available version to rule out incompatibilities.</li><li>Make sure neovim was compiled with luajit.</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># The output of version information should include a line for: LuaJIT </span>\nnvim -v\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol><li>Make sure all the dependencies listed in <a href="#manual-install">Manual Install</a> are actually installed on your system.</li><li>Make sure your plugins are installed and updated. Run <code>:PackerSync</code></li><li>If you&#39;re upgrading your install, sometimes an old packer compiled file can cause errors at runtime. Remove the folder. <code>rm -rf ~/.config/lvim/plugin</code> and run <code>:PackerSync</code></li></ol><h2 id="uninstall" tabindex="-1"><a class="header-anchor" href="#uninstall" aria-hidden="true">#</a> Uninstall</h2><p>You can remove LunarVim entirely by running the following commands:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">rm</span> -rf ~/.local/share/lunarvim\n\n<span class="token function">sudo</span> <span class="token function">rm</span> /usr/local/bin/lvim\n\n<span class="token function">rm</span> -rf ~/.local/share/applications/lvim.desktop\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',19),b={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("p",null,[i,(0,e.Wm)("a",o,[t,(0,e.Wm)(a)])]),p,(0,e.Wm)("p",null,[r,(0,e.Wm)("a",c,[u,(0,e.Wm)(a)])]),m],64)}}}}]);