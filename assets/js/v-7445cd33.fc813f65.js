(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[368],{9123:(e,n,t)=>{"use strict";t.r(n),t.d(n,{data:()=>r});const r={key:"v-7445cd33",path:"/dev/",title:"Learning Lua",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Official Documentation",slug:"official-documentation",children:[]},{level:2,title:"Neovim Documentation",slug:"neovim-documentation",children:[]},{level:2,title:"Style Guide",slug:"style-guide",children:[]},{level:2,title:"Code Quality",slug:"code-quality",children:[]}],filePathRelative:"dev/README.md",git:{updatedTime:1627747169e3,contributors:[]}}},1891:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>te});var r=t(6252);const a=(0,r.Wm)("h1",{id:"learning-lua",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#learning-lua","aria-hidden":"true"},"#"),(0,r.Uk)(" Learning Lua")],-1),o=(0,r.Uk)("To get started, "),l={href:"https://github.com/nanotee/nvim-lua-guide",target:"_blank",rel:"noopener noreferrer"},i=(0,r.Uk)("this guide"),u=(0,r.Uk)(" covers many points that will get you going with Lua and how Neovim works."),s=(0,r.Wm)("h2",{id:"official-documentation",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#official-documentation","aria-hidden":"true"},"#"),(0,r.Uk)(" Official Documentation")],-1),m=(0,r.Uk)("The "),h={href:"https://www.lua.org/manual/5.4/",target:"_blank",rel:"noopener noreferrer"},d=(0,r.Uk)("reference manual"),c=(0,r.Uk)(" is the official definition of the Lua language."),k=(0,r.Uk)("If you don't know about it, "),f={href:"https://devdocs.io/lua~5.4/",target:"_blank",rel:"noopener noreferrer"},p=(0,r.Uk)("DevDocs"),g=(0,r.Uk)(" combines multiple API documentations in a fast, organized, and searchable interface."),W=(0,r.Wm)("h2",{id:"neovim-documentation",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#neovim-documentation","aria-hidden":"true"},"#"),(0,r.Uk)(" Neovim Documentation")],-1),U=(0,r.Uk)("Neovim provides a "),b={href:"https://neovim.io/doc/user/lua.html",target:"_blank",rel:"noopener noreferrer"},y=(0,r.Uk)("standard library"),v=(0,r.Uk)(" which you should know about."),w=(0,r.Wm)("p",null,[(0,r.Uk)("It provides many functions that you wish were implemented in Lua's stdlib, for instance "),(0,r.Wm)("code",null,"strings.split"),(0,r.Uk)(".")],-1),L=(0,r.Uk)("It also comes with a "),_={href:"https://neovim.io/doc/user/lsp.html",target:"_blank",rel:"noopener noreferrer"},S=(0,r.Uk)("LSP framework"),x=(0,r.Uk)(" and "),C={href:"https://neovim.io/doc/user/",target:"_blank",rel:"noopener noreferrer"},D=(0,r.Uk)("much more"),A=(0,r.Uk)("."),I=(0,r.Wm)("h2",{id:"style-guide",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#style-guide","aria-hidden":"true"},"#"),(0,r.Uk)(" Style Guide")],-1),q=(0,r.Uk)("LuaRock "),N={href:"https://github.com/luarocks/lua-style-guide",target:"_blank",rel:"noopener noreferrer"},T=(0,r.Uk)("style guide"),O=(0,r.Uk)(" is a complete work that deserves a look if you want learn how to write consistent and robust code."),P=(0,r.Wm)("p",null,"It is based on many pre-existing guides, provides rationals for all their decisions, and worked successfully in a long-running project.",-1),R=(0,r.Wm)("h2",{id:"code-quality",tabindex:"-1"},[(0,r.Wm)("a",{class:"header-anchor",href:"#code-quality","aria-hidden":"true"},"#"),(0,r.Uk)(" Code Quality")],-1),V=(0,r.Uk)("To ensure code quality and a consistent style, our "),j={href:"https://github.com/ChristianChiarulli/LunarVim/actions",target:"_blank",rel:"noopener noreferrer"},z=(0,r.Uk)("CI"),E=(0,r.Uk)(" uses the following tools:"),G=(0,r.Uk)("Lua: "),M={href:"https://github.com/JohnnyMorganz/StyLua",target:"_blank",rel:"noopener noreferrer"},Q=(0,r.Uk)("Stylua"),H=(0,r.Uk)(". An opinionated Lua code formatter."),J={href:"https://github.com/mpeterv/luacheck",target:"_blank",rel:"noopener noreferrer"},Y=(0,r.Uk)("Luacheck"),B=(0,r.Uk)(". A tool for linting and static analysis of Lua code."),F=(0,r.Uk)("Shell "),K={href:"https://github.com/mvdan/sh",target:"_blank",rel:"noopener noreferrer"},X=(0,r.Uk)("Shfmt"),Z=(0,r.Uk)(". A shell parser, formatter, and interpreter with bash support."),$={href:"https://github.com/koalaman/shellcheck",target:"_blank",rel:"noopener noreferrer"},ee=(0,r.Uk)("Shellcheck"),ne=(0,r.Uk)(". A static analysis tool for shell scripts."),te={render:function(e,n){const t=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[a,(0,r.Wm)("p",null,[o,(0,r.Wm)("a",l,[i,(0,r.Wm)(t)]),u]),s,(0,r.Wm)("p",null,[m,(0,r.Wm)("a",h,[d,(0,r.Wm)(t)]),c]),(0,r.Wm)("p",null,[k,(0,r.Wm)("a",f,[p,(0,r.Wm)(t)]),g]),W,(0,r.Wm)("p",null,[U,(0,r.Wm)("a",b,[y,(0,r.Wm)(t)]),v]),w,(0,r.Wm)("p",null,[L,(0,r.Wm)("a",_,[S,(0,r.Wm)(t)]),x,(0,r.Wm)("a",C,[D,(0,r.Wm)(t)]),A]),I,(0,r.Wm)("p",null,[q,(0,r.Wm)("a",N,[T,(0,r.Wm)(t)]),O]),P,R,(0,r.Wm)("p",null,[V,(0,r.Wm)("a",j,[z,(0,r.Wm)(t)]),E]),(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[G,(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[(0,r.Wm)("a",M,[Q,(0,r.Wm)(t)]),H]),(0,r.Wm)("li",null,[(0,r.Wm)("a",J,[Y,(0,r.Wm)(t)]),B])])]),(0,r.Wm)("li",null,[F,(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[(0,r.Wm)("a",K,[X,(0,r.Wm)(t)]),Z]),(0,r.Wm)("li",null,[(0,r.Wm)("a",$,[ee,(0,r.Wm)(t)]),ne])])])])],64)}}}}]);