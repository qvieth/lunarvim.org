(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[190],{9251:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>e});const e={key:"v-74dd09a6",path:"/languages/",title:"Languages",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Formatting",slug:"formatting",children:[]},{level:2,title:"Linting",slug:"linting",children:[]}],filePathRelative:"languages/README.md",git:{updatedTime:1628072869e3,contributors:[]}}},493:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>u});var e=s(6252);const t=(0,e.uE)('<h1 id="languages" tabindex="-1"><a class="header-anchor" href="#languages" aria-hidden="true">#</a> Languages</h1><p>LunarVim strives to have basic LSP, linting, formatting and syntax support for all major languages.</p><p>If your language is not supported please do the following:</p><ul><li><p>Check if LSP support is available in the lspconfig repo</p></li><li><p>Check if your linter or formatter is available in the null-ls repo</p></li><li><p>Check if your syntax is supported in the treesitter repo</p></li></ul><p>If there is support for your language please file an issue with the LunarVim repo</p><p>If there is not file a ticket with one of the above repos</p><h2 id="formatting" tabindex="-1"><a class="header-anchor" href="#formatting" aria-hidden="true">#</a> Formatting</h2>',7),p=(0,e.Uk)("Formatting is handled by Null-ls it is off by default. Not all formatters are supported. For a list of supported formatters and linters "),o={href:"https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md#available-sources",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("look here"),i=(0,e.uE)('<p>If you want to enable formatting, add the following to your config.lua</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>typescriptreact<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">{</span>\n    exe <span class="token operator">=</span> <span class="token string">&quot;prettier&quot;</span><span class="token punctuation">,</span>\n    args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Define the formatter for your filetype.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>typescript<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>typescriptreact<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>javascript<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\nlvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>typescriptreact<span class="token punctuation">.</span>formatters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>If the name of your formatter or linter includes a hyphen <code>-</code>, replace it with an underscore <code>_</code>. Dashes are not valid identifiers in lua. LunarVim chooses to match the name of the formatter with the variable it&#39;s stored in.</p><p>To enable format on save, add the following to your <code>config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>format_on_save <span class="token operator">=</span> <span class="token keyword">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="linting" tabindex="-1"><a class="header-anchor" href="#linting" aria-hidden="true">#</a> Linting</h2><p>Linting is handled by Null-ls. To set a linter for your language:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>typescriptreact<span class="token punctuation">.</span>linters <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token punctuation">{</span>\n    exe <span class="token operator">=</span> <span class="token string">&quot;eslint_d&quot;</span><span class="token punctuation">,</span>\n    args <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>To enable linting on save:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lint_on_save <span class="token operator">=</span> <span class="token keyword">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',12),u={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("p",null,[p,(0,e.Wm)("a",o,[l,(0,e.Wm)(s)])]),i],64)}}}}]);